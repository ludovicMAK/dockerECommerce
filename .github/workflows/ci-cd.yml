name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: registry.jgrandville.fr
  REGISTRY_USER: joshua
  REGISTRY_PASSWORD: EsgiRegistry
  IMAGE_NAME: e-commerce

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Run Tests
        run: |
          chmod +x ./scripts/run-tests.sh
          ./scripts/run-tests.sh

  build:
    needs: test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      
      - name: Login to Private Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          
      - name: Build and Push Frontend
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:${{ github.sha }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest ./frontend
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest
          
      - name: Build and Push Auth Service
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/auth-service:${{ github.sha }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/auth-service:latest ./services/auth-service
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/auth-service:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/auth-service:latest
          
      - name: Build and Push Product Service
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/product-service:${{ github.sha }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/product-service:latest ./services/product-service
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/product-service:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/product-service:latest
          
      - name: Build and Push Order Service
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/order-service:${{ github.sha }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/order-service:latest ./services/order-service
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/order-service:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/order-service:latest

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          
      - name: Deploy to Production
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "cd /opt/e-commerce && \
          docker login -u ${{ env.REGISTRY_USER }} -p ${{ env.REGISTRY_PASSWORD }} ${{ env.REGISTRY }} && \
          docker-compose -f docker-compose.prod.yml pull && \
          docker-compose -f docker-compose.prod.yml up -d --force-recreate" 