name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  IMAGE_NAME: e-commerce

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Run Tests
        run: |
          chmod +x ./scripts/run-tests.sh
          ./scripts/run-tests.sh

  build-and-push:
    needs: test
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to Private Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Set Docker Tags
        id: docker_tags
        run: |
          if [ ${{ github.ref }} = 'refs/heads/main' ]; then
            echo "::set-output name=tags::${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/frontend:latest,${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/frontend:${{ github.sha }}"
          else
            echo "::set-output name=tags::${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/frontend:develop"
          fi
          
      - name: Build and Push Frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
          cache-from: type=registry,ref=${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/frontend:latest
          cache-to: type=inline

      - name: Build and Push Services
        run: |
          SERVICES=("auth-service" "product-service" "order-service")
          
          for service in "${SERVICES[@]}"; do
            echo "Building and pushing $service..."
            
            # Build the image
            docker build -t ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/$service:${{ github.sha }} \
              $([ "$service" == "product-service" ] && echo "-f services/$service/Dockerfile ." || echo "./services/$service")
            
            # Push SHA tagged image
            docker push ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/$service:${{ github.sha }}
            
            # Tag and push based on branch
            if [ ${{ github.ref }} = 'refs/heads/main' ]; then
              docker tag ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/$service:${{ github.sha }} \
                ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/$service:latest
              docker push $service:latest
            else
              docker tag ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/$service:${{ github.sha }} \
                ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/$service:develop
              docker push $service:develop
            fi
          done

      - name: Verify Images
        run: |
          if [ ${{ github.ref }} = 'refs/heads/main' ]; then
            for service in frontend auth-service product-service order-service; do
              echo "Verifying $service latest tag..."
              docker pull ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}/$service:latest
            done
          fi
