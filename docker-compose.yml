services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - order-service
    networks:
      - ecommerce-network
  order-service:
    build:
      context: ./services/order-service
      target: production
    environment:
      - MONGO_URI=${MONGODB_URI}
    depends_on:
      - order-db
    networks:
      - ecommerce-network
  order-db:
    image: mongo:4.4
    container_name: order-db
    networks:
      - ecommerce-network
    volumes:
      - order-db-data:/data/db
  auth-service:
    container_name: auth-service
    build:
      context: services/auth-service
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=${MONGODB_URI_AUTH}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "3001:3001"
    depends_on:
      - auth-db
    networks:
      - ecommerce-network
  auth-db:
    image: mongo:8.0
    container_name: auth-db
    networks:
      - ecommerce-network
    volumes:
      - auth-db-data:/data/db
  product-service:
    container_name: product-service
    build:
      context: services/product-service
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=${MONGODB_URI_PRODUCT}
    ports:
      - "3000:3000"
    depends_on:
      - product-db
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  order-db-data:
  auth-db-data:
  product-db-data: